// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/login/create": {
            "post": {
                "description": "Pega o username e password e cria",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Cria Usuário",
                "operationId": "createUser",
                "parameters": [
                    {
                        "description": "Credenciais do usuário",
                        "name": "User.Login",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/User.Login"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/User.Login"
                        }
                    }
                }
            }
        },
        "/login/delete": {
            "post": {
                "description": "Pega o username e senha e exclui",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Deleta Usuário",
                "operationId": "deleteUser",
                "parameters": [
                    {
                        "description": "Credenciais do usuário",
                        "name": "User.Login",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/User.Login"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/User.Message"
                        }
                    }
                }
            }
        },
        "/login/token": {
            "post": {
                "description": "Faz login com nome de usuário e senha",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Logar usuário",
                "operationId": "logar",
                "parameters": [
                    {
                        "description": "Credenciais do usuário",
                        "name": "userCredentials",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/User.Login"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/jwt_func.Verfica"
                        }
                    }
                }
            }
        },
        "/login/validador": {
            "post": {
                "description": "Pega o token e verifica se é válido",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Verifica Jwt Token",
                "operationId": "verificadorJwt",
                "parameters": [
                    {
                        "description": "Token",
                        "name": "token",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/jwt_func.RetornoVerificar"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "User.Login": {
            "type": "object",
            "properties": {
                "password": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "User.Message": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "jwt_func.RetornoVerificar": {
            "type": "object",
            "properties": {
                "validToken": {
                    "type": "boolean"
                }
            }
        },
        "jwt_func.Verfica": {
            "type": "object",
            "properties": {
                "token": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "172.23.58.10:8006",
	BasePath:         "/login",
	Schemes:          []string{"http", "https"},
	Title:            "Login - Jwt - API",
	Description:      "Gerencia o sistema de autenticação e geração de tokens (jwt)",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
